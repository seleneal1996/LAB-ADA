# -*- coding: utf-8 -*-
"""LAB6ADA_QUICK.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1A9sBvMGcyigB10oGs5Qf0RmWqGw8hF2z
"""

#Barrios Cornejo Selene

import random
from math import log as ln
import matplotlib.pyplot as plt 
class Quicksort:

  def swap(self,a,b):
    temp = a 
    a = b
    b = temp
    
  def qs(self,A,p,r):
    if p<r:
      q = self.partition(A,p,r)
      self.qs(A,p,q-1)
      self.qs(A,q+1,r)
        
  def partition(self, A, p, r):
    global timesComp
    #pivot aleatorio
    x= A[random.randrange(p,r)]
    i = p-1
    for j in range(p, r-1):
      if A[j] <= x:
        i = i + 1
        self.swap(A[i],A[j])
        timesComp+=1
    self.swap(A[i+1],A[r])
    return i + 1
        
  def sort(self, A):
    self.qs(A,0,len(A)-1)
    
def aleatorio(n):
    return [random.randint(0, n) for x in range(n)]

#Vectores para el plot
x=[]
y=[]
y1=[]

#Instancia
quick = Quicksort()
#lista por compresion para tam del arreglo 2^8 hasta 2^20
tam_vec = [2 ** x for x in range(8,30)]
print('i ','   ',' avg','   ',' i*ln(i)')
for i in tam_vec:
  x.append(i)
  timesComp=0
  for j in range(200):
    A=aleatorio(i)
    quick.sort(A)
    A.clear()
  avg=round(timesComp/200,2)
  y.append(avg)
  y1.append(i*ln(i))
  print(i,"  ",avg,"   ",round(i*ln(i),2))

#PLOT
plt.title('ln(i)*1 vs prom')
plt.plot(x,y,color ='b',label='prom')
plt.plot(x,y1,color ='r',label='ln(i)*i')
plt.grid(True)

plt.legend()
plt.xlabel('n')
plt.ylabel('times')

import matplotlib.pyplot as plt
from math import log as ln
x=[]
y=[]
y1=[]
y2=[]
tam_vec = [2 ** x for x in range(8,21)]

for i in tam_vec:
  x.append(i)
for i in [1016.49	,2316.15	,5277.6,	12035.81	,27353.02	,59680.38,	131767.61,	283824.45,	613165.69,	1322033.48,	2819265.37,	6014786.03,	12767134.3 ]:
                      y.append(i)

for i in [973.29,	2280.55,	5295.62,	12063.19,	
                  26912.28,	58935.24,	129600.32,	283285.21,	608659.95,	1319163.38,	2807732.13,	5977760.32,	12652040.87]:
                  y1.append(i)
for i in tam_vec:
  y2.append(ln(i)*i)

plt.title('COMPARATIVA')
plt.plot(x,y,color ='b',label='AVG SIN PIVOTE RANDOM')
plt.plot(x,y1,color ='y',label='AVG CON PIVOTE RANDOM')
plt.plot(x,y2,color ='m',label='ln(i)*i')
plt.grid(True)

plt.legend()
plt.xlabel('n')
plt.ylabel('times')